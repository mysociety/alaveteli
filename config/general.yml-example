# general.yml-example:
# Example values for the "general" config file.
#
# Configuration parameters, in YAML syntax.
#
# Copy this file to one called "general.yml" in the same directory.  Or
# have multiple config files and use a symlink to change between them.

# Site name appears in various places throughout the site
SITE_NAME: 'Alaveteli'

# Domain used in URLs generated by scripts (e.g. for going in some emails)
DOMAIN: '127.0.0.1:3000'

# ISO country code of country currrently deployed in
# (http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
ISO_COUNTRY_CODE: GB

# These feeds are displayed accordingly on the Alaveteli "blog" page:
BLOG_FEED: 'http://www.mysociety.org/category/projects/whatdotheyknow/feed/'
TWITTER_USERNAME: 'whatdotheyknow'

# Locales we wish to support in this app, space-delimited
AVAILABLE_LOCALES: 'en es'
DEFAULT_LOCALE: 'en'
USE_DEFAULT_BROWSER_LANGUAGE: true

# How many days should have passed before an answer to a request is officially late?
REPLY_LATE_AFTER_DAYS: 20
REPLY_VERY_LATE_AFTER_DAYS: 40
# We give some types of authority like schools a bit longer than everyone else
SPECIAL_REPLY_VERY_LATE_AFTER_DAYS: 60
# Whether the days above are given in working or calendar days. Value can be "working" or "calendar".
# Default is "working".
WORKING_OR_CALENDAR_DAYS: working

# example public bodies for the home page, semicolon delimited - short_names
# Comment out if you want this to be auto-generated. WARNING: this is slow & don't use production!
FRONTPAGE_PUBLICBODY_EXAMPLES: 'tgq'

# URLs of themes to download and use (when running rails-post-deploy
# script). Earlier in the list means the templates have a higher
# priority.
THEME_URLS:
 - 'git://github.com/mysociety/adminbootstraptheme.git'
 - 'git://github.com/mysociety/alavetelitheme.git'

# Whether a user needs to sign in to start the New Request process
FORCE_REGISTRATION_ON_NEW_REQUEST: false


## Incoming email
# Your email domain, e.g. 'foifa.com'
INCOMING_EMAIL_DOMAIN: 'localhost'

# An optional prefix to help you distinguish FOI requests, e.g. 'foi+'
INCOMING_EMAIL_PREFIX: ''

# used for hash in request email address
INCOMING_EMAIL_SECRET: 'xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx'

# used as envelope from at the incoming email domain for cases where we don't care about failure
BLACKHOLE_PREFIX: 'do-not-reply-to-this-address'

## Administration

# The emergency user
ADMIN_USERNAME: 'adminxxxx'
ADMIN_PASSWORD: 'passwordx'

# Set this to true, and the admin interface will be available to anonymous users
SKIP_ADMIN_AUTH: false

# Email "from" details
CONTACT_EMAIL: 'postmaster@localhost'
CONTACT_NAME: 'Alaveteli Webmaster'

# Email "from" details for track messages
TRACK_SENDER_EMAIL: 'postmaster@localhost'
TRACK_SENDER_NAME: 'Alaveteli Webmaster'

# Where the raw incoming email data gets stored; make sure you back
# this up!
RAW_EMAILS_LOCATION: 'files/raw_emails'

# The base URL for admin pages, must always end with a '/'
# e.g. https://www.example.com/secure/alaveteli-admin/
# If not specified, it will default to the path to the admin controller,
# which is usually what you want. It is useful in situations where admin
# requests are proxied via a secure server, for example.
ADMIN_BASE_URL: ''

# Where /stylesheets sits under for admin pages. See asset_host in
# config/environment.rb. Can be full domain or relative path (not an
# absolute path beginning with /).  Again, unlikely to want to change
# this.
ADMIN_PUBLIC_URL: ''

# Secret key for signing cookie_store sessions
COOKIE_STORE_SESSION_SECRET: 'your secret key here, make it long and random'

# If present, puts the site in read only mode, and uses the text as reason
# (whole paragraph). Please use a read-only database user as well, as it only
# checks in a few obvious places.
READ_ONLY: ''

# Is this a staging or dev site (1) or a live site (0).
# Controls whether or not the rails-post-deploy script
# will create the file config/rails_env.rb file to force
# Rails into production environment.
STAGING_SITE: 1

# Recaptcha, for detecting humans. Get keys here: http://recaptcha.net/whyrecaptcha.html
RECAPTCHA_PUBLIC_KEY: 'x'
RECAPTCHA_PRIVATE_KEY: 'x'

# Number of days after which to send a 'new response reminder'
NEW_RESPONSE_REMINDER_AFTER_DAYS: [3, 10, 24]

# For debugging memory problems.  If true, the app logs
# the memory use increase of the Ruby process due to the
# request (Linux only).  Since Ruby never returns memory to the OS, if the
# existing process previously served a larger request, this won't
# show any consumption for the later request.
DEBUG_RECORD_MEMORY: false

# Currently we default to using pdftk to compress PDFs.  You can
# optionally try Ghostscript, which should do a better job of
# compression.  Some versions of pdftk are buggy with respect to
# compression, in which case Alaveteli doesn't recompress the PDFs at
# all and logs a warning message "Unable to compress PDF"; which would
# be another reason to try this setting.
USE_GHOSTSCRIPT_COMPRESSION: true

# mySociety's gazeteer service.  Shouldn't change.
GAZE_URL: http://gaze.mysociety.org

# The email address to which non-bounce responses should be forwarded
FORWARD_NONBOUNCE_RESPONSES_TO: user-support@localhost

# Path to a program that converts a page at a URL to HTML.  It should
# take two arguments: the URL, and a path to an output file.  A static
# binary of wkhtmltopdf is recommended:
# http://code.google.com/p/wkhtmltopdf/downloads/list
# If the command is not present, a text-only version will be rendered
# instead.
HTML_TO_PDF_COMMAND: /usr/local/bin/wkhtmltopdf-amd64

# Exception notifications
EXCEPTION_NOTIFICATIONS_FROM: do-not-reply-to-this-address@example.com
EXCEPTION_NOTIFICATIONS_TO:
 - robin@example.org
 - seb@example.org

# This rate limiting can be turned off per-user via the admin interface
MAX_REQUESTS_PER_USER_PER_DAY: 6


# This is used to work out where to send purge requests.  Should be
# unset if you aren't running behind varnish
VARNISH_HOST: localhost

# Adding a value here will enable Google Analytics on all non-admin pages.
GA_CODE: ''

# If you want to override *all* the public body request emails with your own
# email so that request emails that would normally go to the public body
# go to you, then uncomment below and fill in your email.
# Useful for a staging server to play with the whole process of sending requests
# without inadvertently sending an email to a real authority
#OVERRIDE_ALL_PUBLIC_BODY_REQUEST_EMAILS: test-email@foo.com

# Search path for external commandline utilities (such as pdftohtml, pdftk, unrtf)
UTILITY_SEARCH_PATH: ["/usr/bin", "/usr/local/bin"]
