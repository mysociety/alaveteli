#!/bin/bash
#
### BEGIN INIT INFO
# Provides: alert-tracks
# Required-Start: $local_fs $syslog
# Required-Stop: $local_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: alert-tracks is a daemon running the Alaveteli email alerts
# Description: alert-tracks send Alaveteli email alerts as required
### END INIT INFO
#
# !!(*= $daemon_name *)!! Start the Alaveteli email alert daemon

NAME=!!(*= $daemon_name *)!!
DAEMON=!!(*= $vhost_dir *)!!/alaveteli/script/runner
DAEMON_ARGS="--daemon TrackMailer.alert_tracks_loop"
PIDFILE=!!(*= $vhost_dir *)!!/alert-tracks.pid
LOGFILE=!!(*= $vhost_dir *)!!/logs/alert-tracks.log
DUSER=!!(*= $user *)!!
# Set RAILS_ENV - not needed if using config/rails_env.rb
# RAILS_ENV=your_rails_env
# export RAILS_ENV

trap "" 1

export PIDFILE LOGFILE

quietly_start_daemon() {
    /sbin/start-stop-daemon --quiet --start --pidfile "$PIDFILE" --chuid "$DUSER" --startas "$DAEMON" -- $DAEMON_ARGS
}

start_daemon() {
    /sbin/start-stop-daemon --start --pidfile "$PIDFILE" --chuid "$DUSER" --startas "$DAEMON" -- $DAEMON_ARGS
}

stop_daemon() {
    /sbin/start-stop-daemon --stop --oknodo --pidfile "$PIDFILE"
}

restart() { stop; start; }

case "$1" in
  check)
      quietly_start_daemon
      if [ $? -ne 1 ]
      then
          echo "Alaveteli alert daemon was not running; now restarted"
          exit 1
      else
          exit 0
      fi
      ;;

  start)
      echo -n "Starting Alaveteli alert daemon: $NAME"
      start_daemon
      ;;

  stop)
        echo -n "Stopping Alaveteli alert daemon: $NAME"
        stop_daemon
        ;;

  restart)
      echo -n "Restarting Alaveteli alert daemon: $NAME"
      stop_daemon
      start_daemon
      ;;

  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart|check}"
    exit 1
    ;;
esac

if [ $? -eq 0 ]; then
    echo .
    exit 0
else
    echo " failed"
    exit 1
fi

